{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","App","useState","isShown","setIsShown","isReversed","setIsReversed","sortBy","setSortBy","visibleGoods","sort","a","b","localeCompare","length","reverse","className","type","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,SCLTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6EaC,EA1EO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAY,UAAOT,GAczB,OAZAS,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQL,GACN,IAAK,WAAY,OAAOI,EAAEE,cAAcD,GACxC,IAAK,SAAU,OAAOD,EAAEG,OAASF,EAAEE,OACnC,QAAS,OAAO,MAIhBT,GACFI,EAAaM,UAIb,sBAAKC,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,oBACEb,GACA,wBACEc,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMd,GAAW,IAH5B,mBASDD,GACC,qCACE,sBAAKa,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMZ,GAAc,SAAAa,GAAO,OAAKA,MAH3C,qBAOA,wBACEF,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMV,EAAU,aAH3B,iCAOA,wBACES,KAAK,SACLD,UAAU,6BACVE,QAAS,WACPV,EAAU,MACVF,GAAc,IALlB,mBAUA,wBACEW,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMV,EAAU,WAH3B,+BAQF,cAAC,EAAD,CAAWX,MAAOY,WCjF5BW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.87d68b8d.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isShown, setIsShown] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('id');\n\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((a: string, b: string): number => {\n    switch (sortBy) {\n      case 'alphabet': return a.localeCompare(b);\n      case 'length': return a.length - b.length;\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App content\">\n      <h1 className=\"title mt-6\">Goods</h1>\n      {!isShown && (\n        <button\n          type=\"button\"\n          className=\"button is-info is-inverted\"\n          onClick={() => setIsShown(true)}\n        >\n          Start\n        </button>\n      )}\n\n      {isShown && (\n        <>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className=\"button is-info is-inverted\"\n              onClick={() => setIsReversed(current => !current)}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"button is-info is-inverted\"\n              onClick={() => setSortBy('alphabet')}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className=\"button is-info is-inverted\"\n              onClick={() => {\n                setSortBy('id');\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n            <button\n              type=\"button\"\n              className=\"button is-info is-inverted\"\n              onClick={() => setSortBy('length')}\n            >\n              Sort by length\n            </button>\n          </div>\n          <GoodsList goods={visibleGoods} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}