{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","visibleGoods","useState","isReversed","setIsReversed","sortBy","setSortBy","sort","a","b","localeCompare","length","reverse","className","type","onClick","current","map","good","goodsFromServer","App","isShown","setIsShown","ReactDOM","render","document","getElementById"],"mappings":"iOAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrCC,EAAY,YAAOD,GACzB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KAcA,OAZAL,EAAaM,MAAK,SAACC,EAAWC,GAC5B,OAAQJ,GACN,IAAK,WAAY,OAAOG,EAAEE,cAAcD,GACxC,IAAK,SAAU,OAAOD,EAAEG,OAASF,EAAEE,OACnC,QAAS,OAAO,MAIhBR,GACFF,EAAaW,UAIb,qCACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMX,GAAc,SAAAY,GAAO,OAAKA,MAH3C,qBAOA,wBACEF,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMT,EAAU,aAH3B,iCAOA,wBACEQ,KAAK,SACLD,UAAU,6BACVE,QAAS,WACPT,EAAU,MACVF,GAAc,IALlB,mBAUA,wBACEU,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMT,EAAU,WAH3B,+BAQF,6BACGL,EAAagB,KAAI,SAAAC,GAAI,OACpB,6BACGA,GADMA,YCxDbC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwBaC,EArBO,WACpB,MAA8BlB,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KAEA,OACE,sBAAKT,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,mBACEQ,EAUE,cAAC,EAAD,CAAWrB,MAAOmB,IARlB,wBACEL,KAAK,SACLD,UAAU,6BACVE,QAAS,kBAAMO,GAAW,IAH5B,uBCtBVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.abdffa60.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  const visibleGoods = [...goods];\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('id');\n\n  visibleGoods.sort((a: string, b: string): number => {\n    switch (sortBy) {\n      case 'alphabet': return a.localeCompare(b);\n      case 'length': return a.length - b.length;\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <>\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"button is-info is-inverted\"\n          onClick={() => setIsReversed(current => !current)}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          className=\"button is-info is-inverted\"\n          onClick={() => setSortBy('alphabet')}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className=\"button is-info is-inverted\"\n          onClick={() => {\n            setSortBy('id');\n            setIsReversed(false);\n          }}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          className=\"button is-info is-inverted\"\n          onClick={() => setSortBy('length')}\n        >\n          Sort by length\n        </button>\n      </div>\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isShown, setIsShown] = useState(false);\n\n  return (\n    <div className=\"App content\">\n      <h1 className=\"title mt-6\">Goods</h1>\n      {!isShown\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-info is-inverted\"\n            onClick={() => setIsShown(true)}\n          >\n            Start\n          </button>\n        )\n        : <GoodsList goods={goodsFromServer} />}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}